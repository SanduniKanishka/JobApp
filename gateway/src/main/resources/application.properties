spring.application.name=gateway
server.port=8084

#PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/job
spring.datasource.username=sanduni
spring.datasource.password=sanduni
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

#Zipkin
management.tracing.sampling.probability=1.0

#Gateway
spring.cloud.gateway.server.webflux.routes[0].id=company_service
#spring.cloud.gateway.server.webflux.routes[0].uri.=http://localhost:8081
spring.cloud.gateway.server.webflux.routes[0].uri=lb://COMPANY-SERVICE
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/companies/**

spring.cloud.gateway.server.webflux.routes[1].id=job_service
#If there is only one instance =>
#spring.cloud.gateway.server.webflux.routes[1].uri.=http://localhost:8082
# If there are several instances and so load has to be distribute in all instances
spring.cloud.gateway.server.webflux.routes[1].uri=lb://JOB-SERVICE-DEV
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/jobs/**

spring.cloud.gateway.server.webflux.routes[2].id=review_service
#spring.cloud.gateway.server.webflux.routes[2].uri.=http://localhost:8083
spring.cloud.gateway.server.webflux.routes[2].uri=lb://REVIEW-SERVICE
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/reviews/**

spring.cloud.gateway.server.webflux.routes[3].id=eureka-server
spring.cloud.gateway.server.webflux.routes[3].uri=http://localhost:8761
spring.cloud.gateway.server.webflux.routes[3].predicates[0]=Path=/eureka/main
spring.cloud.gateway.server.webflux.routes[3].filters[0]=SetPath=/

spring.cloud.gateway.server.webflux.routes[4].id=eureka-server-static
spring.cloud.gateway.server.webflux.routes[4].uri=http://localhost:8761
spring.cloud.gateway.server.webflux.routes[4].predicates[0]=Path=/eureka/**


logging.level.root=info
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=TRACE